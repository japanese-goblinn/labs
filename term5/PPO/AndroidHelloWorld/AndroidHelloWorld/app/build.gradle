apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    signingConfigs {
        release {
            storeFile file('/Users/saisuicied/Downloads/Android/keystore/key')
            storePassword 'yourPassword'
            keyAlias = 'key0'
            keyPassword 'yourPassword'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.helloworld"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode showCodeVersion()
        versionName showVersion()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release //используем штуку для подписи
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.0.0'
}

def showCodeVersion() {
    def versionNameValues = showVersion().split('\\.')
    int major = versionNameValues[0] as Integer
    int minor = versionNameValues[1] as Integer
    if (versionNameValues.size() == 3) {
        int patch = versionNameValues[2] as Integer
        return major * 10000 + minor * 100 + patch
    } else {
        return major * 10000 + minor * 100
    }
}

def showVersion() {
    def versionNameValues = "git describe --tags".execute().text.split('-')
    if (versionNameValues.size() == 3) {
        return "${versionNameValues[0]}.${versionNameValues[1]}"
    } else {
        return versionNameValues[0].trim()
    }
}