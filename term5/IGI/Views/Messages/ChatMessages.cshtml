@using Microsoft.AspNetCore.Mvc.Localization
@model Twitter.ViewModels.MessagesViewModel
@inject IViewLocalizer Localizer

@{
    Layout = "_Layout";
}


<div class="d-flex text-left ml-1 mt-3">
    <div class="d-flex ml-1 align-items-start mt-1">
        <img height="50" width="50" class="rounded-circle" src="~/images/default.jpg" alt="default userpic"/>
    </div>
    <div class="flex-column ml-3">
        <div class="d-flex justify-content-start" style="font-weight: bold; font-size: x-large">
            <a id="header" class="text-dark" asp-controller="Profile" asp-action="Index" asp-route-userName="@Model.ChatWith.UserName">
                @Model.ChatWith.Name
            </a>
        </div>
        <div class="d-flex justify-content-start bd-highlight" style="color: rgb(101, 119, 134)">
            @@@Model.ChatWith.UserName
        </div>
    </div>
</div>
<hr/>
<div id="scrollView" style="overflow-y: scroll; height: 610px;">
    @foreach (var message in Model.Messages)
    {
        @await Component.InvokeAsync("Message", new { id = message.Id })
    }  
</div>
<hr/>
<div class="d-flex mt-3 mb-4 ml-2 mr-2">
    <div class="mr-2 flex-fill">
        <input id="message" name="message" class="form-control" placeholder="@Localizer["NewMessage"]"/>
    </div>
    <div>
        <input id="sendButton" type="button" value="@Localizer["Send"]" class="btn btn-primary"/>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    let hubConnection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:5001/chat")
                .configureLogging(signalR.LogLevel.Information)
                .build();
     
    hubConnection.on("Send", (userFromName, userFromUsername, userToUsername, message) => {
        var sendText = '<div class="ml-2 text-left">';
        console.log(userFromName, userFromUsername, userToUsername);
        if (userFromUsername === '@User.Identity.Name') {
            sendText += '<div class="d-flex"> <div style="font-weight: bold">@Localizer["Me"]</div> <div class="ml-1" style="color: rgb(101, 119, 134)">' +
             '&#8226 @String.Format("{0:dd.MM.yyyy, H:mm}", DateTime.Now)</div> </div>';
        } else if ('@Model.ChatWith.UserName' === userFromUsername || '@User.Identity.Name' === userFromUsername) {
            sendText += '<div class="d-flex"> <div style="font-weight: bold">' + userFromName + 
            '</div> <div class="ml-1" style="color: rgb(101, 119, 134)">' + 
            '&#8226 @String.Format("{0:dd.MM.yyyy, H:mm}", DateTime.Now)</div> </div>';
        } else {
            return
        }
        sendText += '<div class="mt-1">' + message +'</div>' + '</div>' + '<hr/>';
        $('#scrollView').append(sendText);
        $('#scrollView').animate({
            scrollTop: $('#scrollView').get(0).scrollHeight
        }, 10);
    });
    
    hubConnection.on("IsOnline", (userName, isUserOnline) => {
        console.log(userName, isUserOnline);
        if (userName === '@Model.ChatWith.UserName' && isUserOnline) {
            document.getElementById("header").innerText += " (online)";
        } 
        if (userName === '@Model.ChatWith.UserName' && !isUserOnline) {
            document.getElementById("header").innerText = '@Model.ChatWith.Name';
        }
    });
   
    document.getElementById("sendButton").addEventListener("click", (e) => {
        let message = document.getElementById("message").value;
        if (!message) { return }
        let userFromId = '@User.Identity.Name';
        let userToId = '@Model.ChatWith';
        hubConnection.invoke("Send", userFromId, userToId, message);
    });
    
    hubConnection.start().then(() => {
        hubConnection.invoke("IsOnline", '@Model.ChatWith.UserName');
    });
</script>

<script>
    $(document).ready(function() {
         $('#scrollView').animate({
             scrollTop: $('#scrollView').get(0).scrollHeight
         }, 500);
     });
    
    document.getElementById("message").addEventListener("keyup", (event) => {
         if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("sendButton").click();
         }
    }); 
</script>

