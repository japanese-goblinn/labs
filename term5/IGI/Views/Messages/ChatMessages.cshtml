@model Twitter.ViewModels.MessagesViewModel

@{
    Layout = "_Layout";
}


<div class="text-left ml-2 mt-3">
    <div class="d-flex justify-content-start" style="font-weight: bold; font-size: x-large">
        <a class="text-dark" asp-controller="Profile" asp-action="Index" asp-route-userName="@Model.ChatWith.UserName">
            @Model.ChatWith.Name
        </a>
    </div>
    <div class="d-flex justify-content-start bd-highlight" style="color: gray">
        @@@Model.ChatWith.UserName
    </div>
</div>
<hr/>
<div id="scrollView" style="overflow-y: scroll; height: 610px;">
    @foreach (var message in Model.Messages)
    {
        @await Component.InvokeAsync("Message", new { id = message.Id })
    }  
</div>
<hr/>
<div class="d-flex mt-3 mb-4 ml-2 mr-2">
    <div class="mr-2 flex-fill">
        <input id="message" name="message" class="form-control" placeholder="New message..."/>
    </div>
    <div>
        <input id="sendButton" type="button" value="Send" class="btn btn-primary"/>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:5001/chat")
                .configureLogging(signalR.LogLevel.Information)
                .build();
     
    hubConnection.on("Send", function (userFromName, userFromUsername, userToUsername, message) {
        var sendText = '<div class="ml-2 text-left">';
        console.log(userFromName, userFromUsername, userToUsername);
        if (userFromUsername === '@User.Identity.Name') {
            sendText += '<div class="d-flex"> <div style="font-weight: bold">Me</div> <div class="ml-1 text-muted">' +
             '* @String.Format("{0:dd.MM.yyyy, H:mm}", DateTime.Now)</div> </div>';
        } else if ('@Model.ChatWith.UserName' === userFromUsername || '@User.Identity.Name' === userFromUsername) {
            sendText += '<div class="d-flex"> <div style="font-weight: bold">' + userFromName + 
            '</div> <div class="ml-1 text-muted">' + 
            '* @String.Format("{0:dd.MM.yyyy, H:mm}", DateTime.Now)</div> </div>';
        } else {
            return
        }
        sendText += '<div class="mt-1">' + message +'</div>' + '</div>' + '<hr/>';
        $('#scrollView').append(sendText);
        $('#scrollView').animate({
            scrollTop: $('#scrollView').get(0).scrollHeight
        }, 10);
    });
    
    document.getElementById("sendButton").addEventListener("click", function (e) {
        let message = document.getElementById("message").value;
        if (!message) { return }
        let userFromId = '@User.Identity.Name';
        let userToId = '@Model.ChatWith';
        hubConnection.invoke("Send", userFromId, userToId, message);
    });
    
    hubConnection.start();
</script>

<script>
    document.getElementById("message").addEventListener("keyup", function(event) {
      if (event.keyCode === 13) {
        event.preventDefault();
        document.getElementById("sendButton").click();
      }
    }); 

    $(document).ready(function() {
        $('#scrollView').animate({
            scrollTop: $('#scrollView').get(0).scrollHeight
        }, 500);
    });
</script>

